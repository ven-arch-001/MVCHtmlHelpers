@using Mvc.Controls.DataTable.Infrastructure.Models
@using Mvc.Controls.DataTable.Infrastructure.Serialization
@using Mvc.Controls.DataTable.Infrastructure
@using Mvc.Controls.DataTable
@using Mvc.Web.Test.Controllers

<div class="container-fluid">
    <div class="row-fluid">         
        <div class="col-lg-12">
            <h2>Include</h2>
            @{
                var vmInclude = Html.DataTableVm("table-usersInclude", (DataTableController h) => h.GetUsersInclude(null),
                    (DataTableController h) => h.PostData(null));

                vmInclude.UseColumnFilterPlugin = false;
                vmInclude.StateSave = false;

                vmInclude.PageLength = 5; //... and set a default
                vmInclude.ShowPageSizes = false;
                vmInclude.ColVis = true;
                vmInclude.ShowFilterInput = true;
                vmInclude.Filter = true;
                vmInclude.HideHeaders = true;
                vmInclude.TableTools = false;
                vmInclude.HideHeaders = false;
                vmInclude.PrintScript = false;
                vmInclude.AddButtoncolumn(new CustomButton() { Functionality = CustomButtonFunction.View, CallBackEvent = "includeView" });
                vmInclude.AddButtoncolumn(new CustomButton() { Functionality = CustomButtonFunction.Edit });
                vmInclude.AddButtoncolumn(new CustomButton() { Functionality = CustomButtonFunction.Add, LabelText = "Add" });
                vmInclude.AddButtoncolumn(new CustomButton() { Functionality = CustomButtonFunction.Delete });
            }
            @Html.Partial("DataTable", vmInclude)
        </div>

        <div class="col-lg-12">
            <h2>Inner Join</h2>
            @{
                var vmInner = Html.DataTableVm("table-usersInner", (DataTableController h) => h.GetUsersInnerJoin(null));

                vmInner.UseColumnFilterPlugin = false;
                vmInner.StateSave = false;

                vmInner.PageLength = 5; //... and set a default
                vmInner.ShowPageSizes = false;
                vmInner.ColVis = false;
                vmInner.ShowFilterInput = false;
                vmInner.Filter = true;
                vmInner.HideHeaders = true;
                vmInner.TableTools = false;
                vmInner.HideHeaders = false;
                vmInner.AddButtoncolumn(new CustomButton() { Functionality = CustomButtonFunction.View });
            }
            @Html.Partial("DataTable", vmInner)
        </div>


        @*<div class="col-lg-12">
            <h2>Outer Join</h2>
            @{
                var vmOuter = Html.DataTableVm("table-usersOuter", (DataTableController h) => h.GetUsersOuterJoin(null));

                vmOuter.UseColumnFilterPlugin = false;
                vmOuter.StateSave = true;

                vmOuter.PageLength = 5; //... and set a default
                vmOuter.ShowPageSizes = false;
                vmOuter.ColVis = false;
                vmOuter.ShowFilterInput = false;
                vmOuter.Filter = true;
                vmOuter.HideHeaders = true;
                vmOuter.TableTools = false;
                vmOuter.HideHeaders = false;
            }
            @Html.Partial("DataTable", vmOuter)
        </div>*@
    </div>
</div>

<script>
    function includeView(e) {
        var html = "";
        $.each(e, function (key, val) {
            html += key + ": " + val + "<br/>";
        });
        alert('custom function called.<br/><br/><br/><b>Data Received:</b><br/>' + html);
    };
</script>